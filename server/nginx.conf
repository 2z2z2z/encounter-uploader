# nginx.conf для контейнера server (reverse proxy)
worker_processes  1;
error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Объявляем upstream-контейнеры по именам из docker-compose
    upstream backend {
        server backend:5000;
    }
    upstream frontend {
        server frontend:80;
    }

    server {
        listen       80;
        server_name  _;

        # 1) Проксирование API-запросов
        location /api/ {
            proxy_pass         http://backend/api/;
            proxy_http_version 1.1;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # 2) Для роутинга SPA: если запрашивают путь (например, /some/page),
        #    а такого файла нет, nginx отдаёт index.html
        location / {
            # Пробуем отдать статический файл из контейнера frontend
            # иначе идём на index.html
            proxy_pass http://frontend;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            # Если файл реально есть (css/js/png и т.д.), nginx сам его отдает.
            # Но поскольку статика в другом контейнере (frontend:80), используем proxy.
            # Для роутинга Vue-SPA добавляем try_files через внутренний redirect.
            proxy_redirect     off;

            # Если URI совпал с реальным файлом — отдаём напрямую (ниже),
            # но т.к. мы через proxy, оставляем всегда отдачу index.html.
            # Дополнительная логика через try_files помогает роутеру Vue —
            # но в случае proxy/nginx вместо этого проще всегда возвращать index.html
            # для вложенных урлов.
            proxy_intercept_errors on;
            error_page 404 = @fallback;
        }

        # Если никакой статики нет (404 от frontend), 
        # отдаём index.html (для корректного SPA-роутинга)
        location @fallback {
            internal;
            proxy_pass http://frontend/;
        }
    }
}
